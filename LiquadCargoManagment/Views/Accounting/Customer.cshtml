@{
    ViewBag.Title = "Add Customers";
}

<div class="content-header">
    <div class="header-section">
        <h1>
            Customers<br><small>Add Customers</small>
        </h1>
    </div>
</div>
<ul class="breadcrumb breadcrumb-top">
    <li>Admin</li>
    <li><a href="javascript:void();">Customers</a></li>
</ul>

<div class="block full">
    <div class="block-title row">
        <div class="col-md-12">
            <a id="" class="btn btn-primary btn-sm pull-right" onclick="$('#modal-add').modal('show'); Enable()" href="#">Add New | <i class="fa fa-plus"></i></a>
        </div>
    </div>

    <div class="" id="grid">
        @Html.Partial("_customer")
    </div>
</div>

<!-- END Datatables Content -->





<div id="modal-add" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg modal-dialog-centered" style="width: 90%;">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header text-center">
                <button type="button" class="close" data-dismiss="modal" onclick="SetDefaultValues()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h2 class="modal-title"><i class="fa fa-pencil-alt"></i>Customer</h2>
            </div>
            <div class="modal-body">
                <form id="customers_form">
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Id *</label>
                            <input type="text" name="customers[customers_id]" id="customers_customers_id" readonly class="form-control form-control-sm" style="width:50%" value="@ViewBag.documentNo" />
                        </div>
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Code</label>
                            <input type="text" name="customers[customers_code]" id="customers_customers_code" class="form-control form-control-sm" style="width:50%" />
                        </div>
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Document Type*</label>
                            @Html.DropDownList("customers_customerTypeId",
                                ViewBag.custtypes as SelectList
                                , new
                                     {
                                         Name = "customers[customerTypeId]"
                                ,
                                         @class = "form-control form-control-sm"
                                ,
                                         @required = true
                                ,
                                         @style = "width:50%"
                            })
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Name</label>
                            <input type="text" name="customers[customers_firstname]" id="customers_customers_firstname" class="form-control form-control-lg" />
                        </div>
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Last Name</label>
                            <input type="text" name="customers[customers_lastname]" id="customers_customers_lastname" class="form-control form-control-lg" style="width:75%;" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Address</label>
                            <textarea name="customers[customers_address]" id="customers_customers_address" class="form-control form-control-lg"></textarea>
                        </div>
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Telephone</label>
                            <input type="text" name="customers[customers_tel]" id="customers_customers_tel" class="form-control form-control-lg" style="width:55%;" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Area</label>
                            @Html.DropDownList("customers_customers_area",
                                ViewBag.areas as SelectList
                                , new
                                     {
                                         Name = "customers[customers_area]"
                                ,
                                         @class = "form-control form-control-sm"
                                ,
                                         @required = true
                                ,
                                         @style = "width:50%"
                            })
                        </div>
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">City</label>
                            @Html.DropDownList("customers_customers_city",
                                ViewBag.city as SelectList
                                , new
                                     {
                                         Name = "customers[customers_city]"
                                ,
                                         @class = "form-control form-control-sm"
                                ,
                                         @required = true
                                ,
                                         @style = "width:50%"
                            })
                        </div>
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Country</label>
                            <input type="text" name="customers[customers_country]" id="customers_customers_country" class="form-control form-control-lg" style="width:55%;" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Customer Group</label>
                            @Html.DropDownList("customers_customers_group",
                                ViewBag.group as SelectList
                                , new
                                     {
                                         Name = "customers[customers_group]"
                                ,
                                         @class = "form-control form-control-sm"
                                ,
                                         @required = true
                                ,
                                         @style = "width:50%"
                            })
                        </div>
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Customer Department</label>
                            @Html.DropDownList("customers_customers_dept",
                                ViewBag.dept as SelectList
                                , new
                                     {
                                         Name = "customers[customers_dept]"
                                ,
                                         @class = "form-control form-control-sm"
                                ,
                                         @required = true
                                ,
                                         @style = "width:50%"
                            })
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Is Active</label>
                            <input type="checkbox" name="customers[isActive]" oninput="check(this)" id="customers_isActive" class="form-control form-control-lg" />
                        </div>
                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="submit" id="btnSaveEdit" class="btn btn-primary pull-right" onclick="SaveRecord(this)"><b><i class="fa fa-save"></i> Save</b></button>
            </div>
            <!-- END Modal Body -->
        </div>
    </div>
</div>

<script src="~/js/Function.js"></script>
<script src="~/js/Software js/Vendor.js"></script>
@section Script
{
    <script>
        const SaveRecord = (e) => {
            debugger;
            var data = document.querySelectorAll('form#customers_form');
            var children = data[0];
            var parentObj = {};
            var childObj = {};
            var childArr = [];
            var prevRowNum = 0;
            for (var i = 0; i < children.length; i++) {
                var child = children[i];
                if (child.id.includes("ac_")) {
                    continue;
                }
                if (child.value != "") {
                    var tableName = child.name.split('[')[0].toLowerCase();
                    var matches = child.name.match(/(?<=\[).*?(?=\])/g);
                    if (tableName == '@ViewBag.parentTable') {
                        parentObj[matches[0]] = child.value;
                    }
                    else {
                        let rowNum = parseInt(child.id.split('_')[2]);
                        if (prevRowNum != rowNum && prevRowNum != 0) {
                            childArr.push(childObj);
                            childObj = {};
                            childObj[matches[1]] = child.value;
                        }
                        else {
                            childObj[matches[1]] = child.value;
                        }
                        prevRowNum = prevRowNum != rowNum ? rowNum : prevRowNum;
                    }
                }
                if (i+1 == children.length) {
                    childArr.push(childObj);
                    childObj = {};
                }
            }
            console.log(parentObj)
            console.log(childArr)
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '@Url.Action("CreateCustomer", "Accounting")',
                data: JSON.stringify({ 'customers': parentObj}),
                success: function (response) {
                    $("#grid").load(location.href + " #grid");
                    ShowMessage(response.Message, "success");
                    $('#modal-add').modal('hide');
                    $('input').val('');
                    $('#customers_id').val(@ViewBag.documentNo + 1);
                },
                failure: function (response) {
                    ShowMessage(response.Message, "error");
                }
            });
        };

        const Delete = (id) => {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Delete Anyway!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        type: 'POST',
                        url: '@Url.Action("DeleteCustomer", "Accounting")',
                        data: JSON.stringify({ 'id': id}),
                        success: function (response) {
                            $("#grid").load(location.href + " #grid");
                            ShowMessage(response.Message, "success");
                        },
                        failure: function (response) {
                            ShowMessage(response.Message, "error");
                        }
                    });
                }
            });
        }

        const update = (obj, e) => {
            console.log(obj);
            $("#modal-add").modal('show');
            $('input').val('');
            Object.entries(obj).forEach(([key, value]) => {
                if (key == "isActive") {
                    debugger;
                    if (value.toLowerCase() == "true") {
                        $('#customers_' + key).attr('checked', true);
                    }
                    else {
                        $('#customers_' + key).removeAttr("checked");
                    }
                }
                else {
                    $('#customers_' + key).val(value);
                }
            });
        };
        const check = obj => {
            var elem = document.querySelector('#' + obj.id + ':checked');
            obj.value = elem !== null ? true : false;
        }
        $(document).ready(function () {
            $("#example").DataTable({
                //dom: 'Bfrtip',
                //buttons: [
                //    'copyHtml5',
                //    'excelHtml5',
                //    'csvHtml5',
                //    'pdfHtml5'
                //]
            });
            Space();
        });


        const SetDefaultValues = () => {
            $('#customers_customers_id').val(@ViewBag.documentNo + 1);
            $("input[type='number']").val(0.00);
            $("input[type='text']").val("");
            $("input[type='date']").val('@DateTime.Now.Date'.split('_')[0]);
            $("textarea").val('');
            $("textarea").text('');
        }

        function Message(title, text, type) {
            Swal.fire({
                title: title + '!',
                text: text,
                icon: type,
                confirmButtonText: 'OK'
            })
        }
        function GetOrders() {
            $('#example').DataTable();
        }
    </script>
}