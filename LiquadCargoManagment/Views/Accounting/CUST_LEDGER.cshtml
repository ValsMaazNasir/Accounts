@{
    ViewBag.Title = "Customer Ledger";
}

<div class="content-header">
    <div class="header-section">
        <h1>
            Report<br><small>Customer Ledger</small>
        </h1>
    </div>
</div>
<ul class="breadcrumb breadcrumb-top">
    <li>Admin</li>
    <li><a href="javascript:void();">Customer Ledger</a></li>
</ul>

<div class="block full">
    <form id="reports_form">
        <div class="form-group row">
            <div class="col-md-4">
                <label for="reports_dst" class="col-form-label">Detail/Summary</label>
                <select name="reports[dst]" id="reports_dst" class="form-control form-control-sm" style="width:70%">
                    <option value="D">Detail</option>
                    <option value="S" selected>Summary</option>
                </select>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-4">
                <label for="reports_frmDt" class="col-form-label">From *</label>
                <input type="date" name="reports[frmDt]" id="reports_frmDt" class="form-control form-control-sm" style="width:50%" value="@DateTime.Now.Date.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-md-4">
                <label for="id" class="col-form-label">To *</label>
                <input type="date" name="reports[toDt]" id="reports_toDt" class="form-control form-control-sm" style="width:50%" value="@DateTime.Now.Date.ToString("yyyy-MM-dd")" />
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-4">
                <label for="reports_typeId" class="col-form-label">For</label>
                @Html.DropDownList("reports_typeId",
                    ViewBag.custtypes as SelectList
                    , new
                            {
                                Name = "reports[typeId]"
                    ,
                                @class = "form-control form-control-sm"
                    ,
                                @required = true
                    ,
                                @style = "width:70%"
                })
            </div>
            <div class="col-md-4">
                <label for="reports_customerId" class="col-form-label">Customer/Vendor</label>
                <input type="text" name="reports[customerId]" id="reports_customerId" class="form-control form-control-lg" />
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-4">
                <button class="btn btn-primary" onclick="SaveRecord(this);" type="button">Report</button>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-12" id="getAjaxResponse">
            </div>
        </div>

    </form>

</div>

<script src="~/js/Function.js"></script>
<script src="~/js/Software js/Vendor.js"></script>
@section Script
{
    <script>
        const SaveRecord = (e) => {
            debugger;
            var data = document.querySelectorAll('form#reports_form'),
            children = data[0],
            queryString = "",
            prevRowNum = 0;
            for (var i = 0; i < children.length; i++) {
                var child = children[i];
                if (child.id.includes("ac_")) {
                    continue;
                }
                if (child.value != "") {
                    var tableName = child.name.split('[')[0].toLowerCase();
                    var matches = child.name.match(/(?<=\[).*?(?=\])/g);
                    if (tableName == 'reports') {
                        queryString += (queryString !== "" ? "&" : "?") + matches[0] + "=" + child.value;
                    }
                }
                else {
                }
            }
            console.log(queryString)
            window.open('@Url.Action("Cust_Ledger_Report", "Accounting")' + queryString, "_blank");
            @*$.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '@Url.Action("CreateCustomer", "Accounting")',
                data: JSON.stringify({ 'reports': parentObj}),
                    $("#grid").load(location.href + " #grid");
                success: function (response) {
                    ShowMessage(response.Message, "success");
                    $('#modal-add').modal('hide');
                    $('input').val('');
                    $('#reports_id').val(@ViewBag.documentNo + 1);
                },
                failure: function (response) {
                    ShowMessage(response.Message, "error");
                }
            });*@
        };

        const Delete = (id) => {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#dUrl3',
                confirmButtonText: 'Delete Anyway!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        type: 'POST',
                        url: '@Url.Action("DeleteCustomer", "Accounting")',
                        data: JSON.stringify({ 'id': id}),
                        success: function (response) {
                            $("#grid").load(location.hrefUrl+ " #grid");
                            ShowMessage(response.Message, "success");
                        },
                        failure: function (response) {
                            ShowMessage(response.Message, "error");
                        }
                    });
                }
            });
        }

        const update = (obj, e) => {
            console.log(obj);
            $("#modal-add").modal('show');
            $('input').val('');
            Object.entries(obj).forEach(([key, value]) => {
                if (key == "isActive") {
                    debugger;
                    if (value.toLowerCase() == "true") {
                        $('#reports_' + key).attr('checked', true);
                    }
                    else {
                        $('#reports_' + key).removeAttr("checked");
                    }
                }
                else {
                    $('#reports_' + key).val(value);
                }
            });
        };
        const check = obj => {
            var elem = document.querySelector('#' + obj.id + ':checked');
            obj.value = elem !== null ? true : false;
        }

        var customersObj = @Html.Raw(Json.Encode(ViewBag.customers));
        $(document).ready(function () {
            initautocomplete(customersObj, "reports_customerId", "customerId", "reports");
            $("#example").DataTable({
                //dom: 'Bfrtip',
                //buttons: [
                //    'copyHtml5',
                //    'excelHtml5',
                //    'csvHtml5',
                //    'pdfHtml5'
                //]
            });
            Space();
        });


        const SetDefaultValues = () => {
            $('#reports_reports_id').val(@ViewBag.documentNo + 1);
            $("input[type='number']").val(0.00);
            $("input[type='text']").val("");
            $("input[type='date']").val('@DateTime.Now.Date'.split('_')[0]);
            $("textarea").val('');
            $("textarea").text('');
        }

        function Message(title, text, type) {
            Swal.fire({
                title: title + '!',
                text: text,
                icon: type,
                confirmButtonText: 'OK'
            })
        }
        function GetOrders() {
            $('#example').DataTable();
        }
    </script>
}