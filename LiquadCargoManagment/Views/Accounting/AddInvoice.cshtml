@{
    ViewBag.Title = "Add Voucher";
}

<div class="content-header">
    <div class="header-section">
        <h1>
            Invoices & Orders<br><small>Add Invoices & Orders</small>
        </h1>
    </div>
</div>
<ul class="breadcrumb breadcrumb-top">
    <li>Admin</li>
    <li><a href="javascript:void();">Add Invoices & Orders</a></li>
</ul>

<div class="block full">
    <div class="block-title row">
        <div class="col-md-12">
            <a id="" class="btn btn-primary btn-sm pull-right" onclick="$('#modal-add').modal('show'); Enable()" href="#">Add New | <i class="fa fa-plus"></i></a>
        </div>
    </div>

    <div class="" id="grid">
        @Html.Partial("_addinvoice")
    </div>
</div>

<!-- END Datatables Content -->





<div id="modal-add" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg modal-dialog-centered" style="width: 90%;">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header text-center">
                <button type="button" class="close" data-dismiss="modal" onclick="SetDefaultValues()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h2 class="modal-title"><i class="fa fa-pencil-alt"></i>New Order/Invoice</h2>
            </div>
            <div class="modal-body">
                <form id="orders_form">
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Document Type*</label>
                            @Html.DropDownList("orders_docTypeId",
                            ViewBag.transTypes as SelectList
                            , new
                            {
                                Name = "orders[docTypeId]"
                            ,
                                @class = "form-control form-control-sm"
                            ,
                                @required = true
                            ,
                                @style = "width:50%"
                            })
                        </div>
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Document Number*</label>
                            <input type="text" name="orders[orders_id]" id="orders_orders_id" readonly class="form-control form-control-sm" style="width:50%" value="@ViewBag.documentNo" />
                        </div>
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Date*</label>
                            <input type="date" name="orders[date_purchased]" id="orders_date_purchased" style="width:50%" class="form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Customer</label>
                            <input type="text" name="orders[customers_id]" id="orders_customers_id" onblur="$('#orders_customers_name').val(this.value);" class="form-control form-control-lg" />
                        </div>
                    </div>
                    <div class="form-group row hide">
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Customer Name</label>
                            <input type="text" name="orders[customers_name]" id="orders_customers_name" class="form-control form-control-lg" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Address</label>
                            <textarea name="orders[customers_address]" id="orders_customers_address" class="form-control form-control-lg"></textarea>
                        </div>
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Telephone</label>
                            <input type="text" name="orders[customers_tel]" id="orders_customers_tel" class="form-control form-control-lg" style="width:60%;" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Area</label>
                            <input name="orders[customers_area]" id="orders_customers_area" class="form-control form-control-lg" style="width:60%;" />
                        </div>
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">City</label>
                            <input type="text" name="orders[customers_city]" id="orders_customers_city" class="form-control form-control-lg" style="width:60%;" />
                        </div>
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Country</label>
                            <input name="orders[customers_country]" id="orders_customers_country" class="form-control form-control-lg" style="width:60%;" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Remarks</label>
                            <textarea name="orders[remarks]" id="orders_remarks" class="form-control form-control-lg"></textarea>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-lg-12">
                            <table class="table table-striped table-responsive table-hover table-bordered" id="orders_products_table">
                                 <thead>
                                    <tr>
                                        <th class="text-center" scope="col">Sr</th>
                                        <th class="text-center" scope="col">Product</th>
                                        <th class="text-center" scope="col">Price</th>
                                        <th class="text-center" scope="col">Quantity</th>
                                        <th class="text-center" scope="col">Discount %</th>
                                        <th class="text-center" scope="col">Discount Amount</th>
                                        <th class="text-center" scope="col">Total Amount</th>
                                    </tr>
                                </thead>
                                 <tbody id="orders_products_tbody">
                                     <tr>
                                         <th scope="row" id="sr_1" name="sr[1]">1</th>
                                         <td style="display:none;"><input type="text" id="orders_products_1_orders_products_id" ;}" name="orders_products[1][orders_products_id]" value="0" class="form-control form-control-sm" /></td>
                                         <td style="display:none;"><input type="text" id="orders_products_1_orders_id" name="orders_products[1][orders_id]" value="0" class="form-control form-control-sm" /></td>
                                         <td><input type="text" id="orders_products_1_products_id" onchange="updateProductDetails(this)" onblur="$('#orders_products_1_products_name').val(this.value)" name="orders_products[1][products_id]" class="form-control form-control-sm" /></td>
                                         <td style="display:none;"><input type="text" id="orders_products_1_products_name" name="orders_products[1][products_name]" class="form-control form-control-sm" /></td>
                                         <td><input type="text" onchange="calculateTotal();" id="orders_products_1_products_price" name="orders_products[1][products_price]" class="form-control form-control-sm" /></td>
                                         <td><input type="text" onchange="calculateTotal();" onblur="calculateLine(this)" id="orders_products_1_products_quantity" name="orders_products[1][products_quantity]" class="form-control form-control-sm" /></td>
                                         <td><input type="number" onchange="calculateTotal();" id="orders_products_1_discPer" name="orders_products[1][discPer]" value="0.00" class="form-control form-control-sm" /></td>
                                         <td><input type="number" onchange="calculateTotal();" id="orders_products_1_discAmt" name="orders_products[1][discAmt]" class="form-control form-control-sm" /></td>
                                         <td><input type="number" id="orders_products_1_lineAmount" name="orders_products[1][lineAmount]" class="form-control form-control-sm" readonly /></td>
                                     </tr>
                                     <tr>
                                         <th scope="row" id="sr_2" name="sr[2]">2</th>
                                         <td style="display:none;"><input type="text" id="orders_products_2_orders_products_id" ;}" name="orders_products[2][orders_products_id]" value="0" class="form-control form-control-sm" /></td>
                                         <td style="display:none;"><input type="text" id="orders_products_2_orders_id" name="orders_products[2][orders_id]" value="0" class="form-control form-control-sm" /></td>
                                         <td><input type="text" id="orders_products_2_products_id" onchange="updateProductDetails(this)" onblur="$('#orders_products_2_products_name').val(this.value)" name="orders_products[2][products_id]" class="form-control form-control-sm" /></td>
                                         <td style="display:none;"><input type="text" id="orders_products_2_products_name" name="orders_products[2][products_name]" class="form-control form-control-sm" /></td>
                                         <td><input type="text" onchange="calculateTotal();" id="orders_products_2_products_price" name="orders_products[2][products_price]" class="form-control form-control-sm" /></td>
                                         <td><input type="text" onchange="calculateTotal();" onblur="calculateLine(this)" id="orders_products_2_products_quantity" name="orders_products[2][products_quantity]" class="form-control form-control-sm" /></td>
                                         <td><input type="number" onchange="calculateTotal();" id="orders_products_2_discPer" name="orders_products[2][discPer]" value="0.00" class="form-control form-control-sm" /></td>
                                         <td><input type="number" onchange="calculateTotal();" id="orders_products_2_discAmt" name="orders_products[2][discAmt]" class="form-control form-control-sm" /></td>
                                         <td><input type="number" id="orders_products_2_lineAmount" name="orders_products[2][lineAmount]" class="form-control form-control-sm" readonly /></td>
                                     </tr>
                                     <tr>
                                         <th scope="row" id="sr_3" name="sr[3]">3</th>
                                         <td style="display:none;"><input type="text" id="orders_products_3_orders_products_id" name="orders_products[3][orders_products_id]" value="0" class="form-control form-control-sm" /></td>
                                         <td style="display:none;"><input type="text" id="orders_products_3_orders_id" name="orders_products[3][orders_id]" value="0" class="form-control form-control-sm" /></td>
                                         <td><input type="text" id="orders_products_3_products_id" onchange="updateProductDetails(this)" onblur="$('#orders_products_3_products_name').val(this.value)" name="orders_products[3][products_id]" class="form-control form-control-sm" /></td>
                                         <td style="display:none;"><input type="text" id="orders_products_3_products_name" name="orders_products[3][products_name]" class="form-control form-control-sm" /></td>
                                         <td><input type="text" onchange="calculateTotal();" id="orders_products_3_products_price" name="orders_products[3][products_price]" class="form-control form-control-sm" /></td>
                                         <td><input type="text" onchange="calculateTotal();" onblur="calculateLine(this)" id="orders_products_3_products_quantity" name="orders_products[3][products_quantity]" class="form-control form-control-sm" /></td>
                                         <td><input type="number" onchange="calculateTotal();" id="orders_products_3_discPer" name="orders_products[3][discPer]" value="0.00" class="form-control form-control-sm" /></td>
                                         <td><input type="number" onchange="calculateTotal();" id="orders_products_3_discAmt" name="orders_products[3][discAmt]" class="form-control form-control-sm" /></td>
                                         <td><input type="number" id="orders_products_3_lineAmount" name="orders_products[3][lineAmount]" class="form-control form-control-sm" readonly /></td>
                                     </tr>
                                 </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6"></div>
                        <div class="col-md-2"></div>
                        <div class="col-md-3">
                            <div class="card" style="width: 37.5rem;">
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item">
                                        <div class="form-group">
                                            <strong>Total Amount: </strong>
                                            <input type="text" readonly class="form-control-borderless float-right" id="orders_total_amt" name="orders[total_amt]" />
                                        </div>
                                    </li>
                                    <li class="list-group-item">
                                        <div class="form-group">
                                            <strong>Total Items: </strong>
                                            <input type="text" readonly class="form-control-borderless float-right" id="orders_totalItems" name="orders[totalItems]" />
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="submit" id="btnSaveEdit" class="btn btn-primary pull-right" onclick="SaveRecord(this)"><b><i class="fa fa-save"></i> Save</b></button>
            </div>
            <!-- END Modal Body -->
        </div>
    </div>
</div>

<script src="~/js/Function.js"></script>
<script src="~/js/Software js/Vendor.js"></script>
@section Script
{
    <script>
        const SaveRecord = (e) => {
            var data = document.querySelectorAll('form#orders_form');
            var children = data[0];
            var parentObj = {};
            var childObj = {};
            var childArr = [];
            var prevRowNum = 0;
            for (var i = 0; i < children.length; i++) {
                var child = children[i];
                if (child.id.includes("ac_")) {
                    continue;
                }
                if (child.value != "") {
                    var tableName = child.name.split('[')[0].toLowerCase();
                    var matches = child.name.match(/(?<=\[).*?(?=\])/g);
                    if (tableName == '@ViewBag.parentTable') {
                        parentObj[matches[0]] = child.value;
                    }
                    else {
                        let rowNum = parseInt(child.id.split('_')[2]);
                        if (prevRowNum != rowNum && prevRowNum != 0) {
                            childArr.push(childObj);
                            childObj = {};
                            childObj[matches[1]] = child.value;
                        }
                        else {
                            childObj[matches[1]] = child.value;
                        }
                        prevRowNum = prevRowNum != rowNum ? rowNum : prevRowNum;
                    }
                }
                if (i+1 == children.length) {
                    childArr.push(childObj);
                    childObj = {};
                }
            }
            console.log(parentObj)
            console.log(childArr)
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '@Url.Action("CreateInvoice", "Accounting")',
                data: JSON.stringify({ 'orders': parentObj,'orders_products': childArr }),
                success: function (response) {
                    $("#grid").load(location.href + " #grid");
                    ShowMessage(response.Message, "success");
                    $('#modal-add').modal('hide');
                    $('input').val('');
                    $('#orders_orders_id').val(@ViewBag.documentNo + 1);
                },
                failure: function (response) {
                    ShowMessage(response.Message, "error");
                }
            });
        };

        const Delete = (id) => {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Delete Anyway!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        type: 'POST',
                        url: '@Url.Action("DeleteInvoice", "Accounting")',
                        data: JSON.stringify({ 'id': id}),
                        success: function (response) {
                            $("#grid").load(location.href + " #grid");
                            ShowMessage(response.Message, "success");
                        },
                        failure: function (response) {
                            ShowMessage(response.Message, "error");
                        }
                    });
                }
            });
        }

        const update = (obj, e) => {
            console.log(obj);
            $("#modal-add").modal('show');
            $('input').val('');
            Object.entries(obj).forEach(([key, value]) => {
                if (key == "orders_products") {
                    Object.entries(value).forEach(([index, object]) => {
                        Object.entries(object).forEach(([iKey, iValue]) => {
                            $('#orders_products_' + (parseInt(index)+1) + '_' + iKey).val(iValue);
                            fillautocompleteOnEdit();
                            calculateLine('orders_products_' + (parseInt(index) + 1) + '_' + iKey);
                        });
                    });
                    calculateTotal();
                }
                else {
                    if (key == "date_purchased") $('#orders_products_' + key).val(value.split("_")[0]);
                    $('#orders_' + key).val(value);
                }
            });
        };

        var customersObj = @Html.Raw(Json.Encode(ViewBag.customers));
        var productsObj = @Html.Raw(Json.Encode(ViewBag.products));
        var gm_accObj = @Html.Raw(Json.Encode(ViewBag.gm_acc));
        $(document).ready(function () {
            // Customers Autocomplete
            initautocomplete(customersObj, "orders_customers_id", "customers_id", "orders");

            // Invoice Autocomplete
            initautocomplete(productsObj, "orders_products_1_products_id", "products_id", "orders_products");
            initautocomplete(productsObj, "orders_products_2_products_id", "products_id", "orders_products");
            initautocomplete(productsObj, "orders_products_3_products_id", "products_id", "orders_products");

            // Accounts Autocomplete
            //initautocomplete(gm_accObj, "accounts_accountId", "accountId", "accounts");

            $("#OwnerContactNo").keypress(function (e) {
                if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                    $("#OwnerContactNo").css("border", "1px solid red");
                    $("#errmsg").html("Contact No Only *").show();
                    return false;
                }
                else {
                    $("#errmsg").fadeOut("slow");
                    $("#OwnerContactNo").css("border", "");
                }
            });
            $("#PrimaryContactNo").keypress(function (e) {
                if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                    $("#PrimaryContactNo").css("border", "1px solid red");
                    $("#errmsg1").html("Contact No Only *").show();
                    return false;
                }
                else {
                    $("#errmsg1").fadeOut("slow");
                    $("#PrimaryContactNo").css("border", "");
                }
            });
            $("#SecContactNo").keypress(function (e) {
                if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                    $("#SecContactNo").css("border", "1px solid red");
                    $("#errmsg2").html("Contact No Only *").show();
                    return false;
                }
                else {
                    $("#errmsg2").fadeOut("slow");
                    $("#SecContactNo").css("border", "");
                }
            });
            $("#PTCLNo").keypress(function (e) {
                if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                    $("#PTCLNo").css("border", "1px solid red");
                    $("#errmsg3").html("Landline No Only *").show();
                    return false;
                }
                else {
                    $("#errmsg3").fadeOut("slow");
                    $("#PTCLNo").css("border", "");
                }
            });
            $("#example").DataTable({
                //dom: 'Bfrtip',
                //buttons: [
                //    'copyHtml5',
                //    'excelHtml5',
                //    'csvHtml5',
                //    'pdfHtml5'
                //]
            });
            Space();
        });

        const calculateLine = obj => {
            var index = obj.toString().includes('_') ? parseInt(obj.split('_')[2]) : parseInt(obj.id.split('_')[2]);
            var totalRows = parseInt($(obj).parent().parent().parent().children().length);
            if (index == totalRows) {
                for (var i = index + 1; i < index + 6; i++) {
                    let tr = '<tr>' +
                        '<th scope = "row" id = "sr_' + i + '" name = "sr[' + i + ']" >' + i +'</th>'+
                        '<td style="display:none;"><input type="text" id="orders_products_' + i + '_orders_products_id" ;}" name="orders_products[' + i +'][orders_products_id]" value="0" class="form-control form-control-sm" /></td>'+
                        '<td style="display:none;"><input type="text" id="orders_products_' + i + '_orders_id" name="orders_products[' + i +'][orders_id]" value="0" class="form-control form-control-sm" /></td>'+
                        '<td><input type="text" id="orders_products_' + i + '_products_id"  onchange="updateProductDetails(this)" onblur="$(\'#orders_products_' + i + '_products_name\').val(this.value)" name="orders_products[' + i +'][products_id]" class="form-control form-control-sm" /></td>' +
                        '<td style="display:none;"><input type="text" id="orders_products_' + i + '_products_name" name="orders_products[' + i +'][products_name]" class="form-control form-control-sm" /></td>' +
                        '<td><input type="text" onchange="calculateTotal();" id="orders_products_' + i + '_products_price" name="orders_products[' + i +'][products_price]" class="form-control form-control-sm" /></td>' +
                        '<td><input type="text" onchange="calculateTotal();" onblur="calculateLine(this)" id="orders_products_' + i + '_products_quantity" name="orders_products[' + i +'][products_quantity]" class="form-control form-control-sm" /></td>' +
                        '<td><input type="number" onchange="calculateTotal();" id="orders_products_' + i +'_discPer" name="orders_products[' + i +'][discPer]" value="0.00" class="form-control form-control-sm" /></td>' +
                        '<td><input type="number" onchange="calculateTotal();" id="orders_products_' + i + '_discAmt" name="orders_products[' + i +'][discAmt]" class="form-control form-control-sm" /></td>' +
                        '<td><input type="number" id="orders_products_' + i + '_lineAmount" name="orders_products[' + i +'][lineAmount]" class="form-control form-control-sm" readonly /></td>' +
                        '</tr>';
                    $(obj).parent().parent().parent().append(tr);
                    initautocomplete(productsObj, "orders_products_" + i + "_products_id", "products_id", "orders_products");
                }
            }
        };

        const SetDefaultValues = () => {
            $('#accounts_id').val(@ViewBag.documentNo + 1);
            $("input[type='number']").val(0.00);
            $("input[type='text']").val("");
            $("input[type='date']").val('@DateTime.Now.Date'.split('_')[0]);
            $("textarea").val('');
            $("textarea").text('');
        }

        const calculateTotal = () => {
            var total = 0;
            var totalItems = 0;
            $('#orders_products_tbody').children().each((index, element) => {
                let qty = $(element).find('[id$="products_quantity"]').val();
                let id = $(element).find('[id$="products_id"]').val();
                let price = $(element).find('[id$="products_price"]').val();
                let discPer = $(element).find('[id$="discPer"]').val();
                let discAmt = $(element).find('[id$="discAmt"]').val();
                let amount = qty * price;
                discPer = discPer / 100;
                discPer = discPer * amount;
                amount = (amount - discPer) - discAmt;
                total += amount;
                $(element).find('[id$="lineAmount"]').val(amount.toFixed(2));
                if (qty > 0 && $.isNumeric(id)) {
                    totalItems++;
                }
            });
            $('#orders_total_amt').val(total.toFixed(2));
            $('#orders_totalItems').val(totalItems);
        };

        const updateProductDetails = obj => {
            var index = undefined;
            if (obj.id.includes('ac_')) {
                index = obj.id.split('_')[3];
            }
            else {
                index = obj.id.split('_')[2];
            }
            var id = $('#orders_products_'+index+'_products_id').val();
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '@Url.Action("GetProductDetails", "Accounting")',
                data: JSON.stringify({ 'id': id}),
                success: function (response) {
                    debugger;
                    console.log(response);
                    $('#orders_products_' + index + '_products_price').val(response.products_tp.toFixed(2));
                },
                failure: function (response) {
                    ShowMessage(response.Message, "error");
                }
            });
        };

        function Message(title, text, type) {
            Swal.fire({
                title: title + '!',
                text: text,
                icon: type,
                confirmButtonText: 'OK'
            })
        }
        function GetOrders() {
            $('#example').DataTable();
        }
    </script>
}