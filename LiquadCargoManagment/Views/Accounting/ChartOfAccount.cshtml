@{
    ViewBag.Title = "Add Chart Of Account";
}
<style>
    .tabs-left {
        border-bottom: none;
        border-right: 1px solid #ddd;
    }

    .tabs-left > li {
        float: none;
        margin: 0px;
    }

    .tabs-left > li.active > a,
    .tabs-left > li.active > a:hover,
    .tabs-left > li.active > a:focus {
        border-bottom-color: #ddd;
        border-right-color: transparent;
        background: #394263;
        color: white;
        border: none;
        color: white;
        border-radius: 0px;
        margin: 0px;
    }

    .nav-tabs > li > a:hover {
        /* margin-right: 2px; */
        line-height: 1.42857143;
        border: 1px solid transparent;
        /* border-radius: 4px 4px 0 0; */
    }

    .tabs-left > li.active > a::after {
        content: "";
        position: absolute;
        top: 10px;
        right: -10px;
        border-top: 10px solid transparent;
        border-bottom: 10px solid transparent;
        border-left: 10px solid #394263;
        display: block;
        color: white;
        width: 0;
    }
    .bs-example {
        margin: 20px;
    }

    .accordion .fa {
        margin-right: 0.5rem;
    }

    .panel-heading a:after {
        font-family: 'Glyphicons Halflings';
        content: "\2212";
        float: right;
        color: grey;
    }

    .panel-heading a.collapsed:after {
        content: "\2b";
    }

    .panel-heading a:after {
        font-family: 'Glyphicons Halflings';
        content: "\2212";
        float: right;
        color: grey;
    }

    .panel-heading a.collapsed:after {
        content: "\2b";
    }
</style>
<div class="content-header">
    <div class="header-section">
        <h1>
            Chart Of Accounts<br><small>Add Chart of Accounts</small>
        </h1>
    </div>
</div>
<ul class="breadcrumb breadcrumb-top">
    <li>Admin</li>
    <li><a href="javascript:void();">Chart of Accounts</a></li>
</ul>

<div class="block full">
    <div class="block-title row">
        <div class="col-md-12">
            <a id="" class="btn btn-primary btn-sm pull-right" onclick="$('#modal-add').modal('show'); Enable()" href="#">Add New | <i class="fa fa-plus"></i></a>
        </div>
    </div>

    <div class="" id="grid" id="treeview">
        @Html.Partial("_chartofaccount")
    </div>
</div>

<!-- END Datatables Content -->





<div id="modal-add" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg modal-dialog-centered" style="width: 90%;">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header text-center">
                <button type="button" class="close" data-dismiss="modal" onclick="SetDefaultValues()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h2 class="modal-title"><i class="fa fa-pencil-alt"></i>Charts Of Account</h2>
            </div>
            <div class="modal-body">
                <form id="gm_acc_form">
                    <div class="form-group row">
                        <div class="col-md-3">
                            <label for="id" class="col-form-label">Account Code *</label>
                            <input type="text" name="gm_acc[CODE]" id="gm_acc_CODE" class="form-control form-control-sm" style="width:70%" />
                        </div>
                        <div class="col-md-3">
                            <label for="id" class="col-form-label">Account Id *</label>
                            <input type="text" name="gm_acc[id]" id="gm_acc_id" readonly class="form-control form-control-sm" style="width:50%" value="@ViewBag.documentNo" />
                        </div>
                        <div class="col-md-3">
                            <label for="id" class="col-form-label">Account Level *</label>
                            <select class="form-control form-control-sm" name="gm_acc[LEVEL]" oninput="setDropdown(this);" id="gm_acc_LEVEL" style="width: 70%;">
                                <option value="0">Not Selected</option>
                                <option value="1">1st Level</option>
                                <option value="2">2nd Level</option>
                                <option value="3">3rd Level</option>
                                <option value="4">4th Level</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label for="id" class="col-form-label">Parent Account</label>
                            @Html.DropDownList("gm_acc_parent_id",
                            ViewBag.parent_acc as SelectList, "- SELECT -"
                            , new
                            {
                                Name = "gm_acc[parent_id]"
                            ,
                                @class = "form-control form-control-sm"
                            ,
                                @required = true
                            ,
                                @style = "width:70%"
                            })
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-3">
                            <label for="id" class="col-form-label">Title</label>
                            <input type="text" name="gm_acc[title]" id="gm_acc_title" class="form-control form-control-lg" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Description</label>
                            <textarea name="gm_acc[description]" id="gm_acc_description" class="form-control form-control-lg"></textarea>
                        </div>
                        <div class="col-md-4">
                            <label for="id" class="col-form-label">Is Active</label>
                            <input type="checkbox" name="gm_acc[isActive]" oninput="check(this)" id="gm_acc_isActive" class="form-control form-control-lg" />
                        </div>
                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="submit" id="btnSaveEdit" class="btn btn-primary pull-right" onclick="SaveRecord(this)"><b><i class="fa fa-save"></i> Save</b></button>
            </div>
            <!-- END Modal Body -->
        </div>
    </div>
</div>

<script src="~/js/Function.js"></script>
<script src="~/js/Software js/Vendor.js"></script>
@section Script
{
    <script>
        var value = false;
        const SaveRecord = (e) => {
            var data = document.querySelectorAll('form#gm_acc_form');
            var children = data[0];
            var parentObj = {};
            var childObj = {};
            var childArr = [];
            var prevRowNum = 0;
            for (var i = 0; i < children.length; i++) {
                debugger;
                var child = children[i];
                if (child.id.includes("ac_")) {
                    continue;
                }
                if (child.value != "") {
                    var tableName = child.name.split('[')[0].toLowerCase();
                    var matches = child.name.match(/(?<=\[).*?(?=\])/g);
                    if (tableName == '@ViewBag.parentTable') {
                        parentObj[matches[0]] = child.value;
                    }
                    else {
                        let rowNum = parseInt(child.id.split('_')[2]);
                        if (prevRowNum != rowNum && prevRowNum != 0) {
                            childArr.push(childObj);
                            childObj = {};
                            childObj[matches[1]] = child.value;
                        }
                        else {
                            childObj[matches[1]] = child.value;
                        }
                        prevRowNum = prevRowNum != rowNum ? rowNum : prevRowNum;
                    }
                }
                if (i+1 == children.length) {
                    childArr.push(childObj);
                    childObj = {};
                }
            }
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '@Url.Action("CreateChartOfAccount", "Accounting")',
                data: JSON.stringify({ 'gm_acc': parentObj}),
                success: function (response) {
                    $("#grid").load(location.href + " #grid");
                    ShowMessage(response.Message, "success");
                    $('#modal-add').modal('hide');
                    $('input').val('');
                    $('#gm_acc_id').val(@ViewBag.documentNo + 1);
                    setTimeout(() => location.reload(), 1000);
                },
                failure: function (response) {
                    ShowMessage(response.Message, "error");
                }
            });
        };

        const Delete = (id) => {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Delete Anyway!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        type: 'POST',
                        url: '@Url.Action("DeleteChartOfAccount", "Accounting")',
                        data: JSON.stringify({ 'id': id}),
                        success: function (response) {
                            $("#grid").load(location.href + " #grid");
                            ShowMessage(response.Message, "success");
                        },
                        failure: function (response) {
                            ShowMessage(response.Message, "error");
                        }
                    });
                }
            });
        }

        const update = (obj, e) => {
            console.log(obj);
            $("#modal-add").modal('show');
            $('input').val('');
            Object.entries(obj).forEach(([key, value]) => {
                if (key == "isActive") {
                    debugger;
                    if (value.toLowerCase() == "1") {
                        $('#gm_acc_' + key).attr('checked', true);
                    }
                    else {
                        $('#gm_acc_' + key).removeAttr("checked");
                    }
                }
                else {
                    $('#gm_acc_' + key).val(value);
                }
            });
        };

        const setDropdown = e => {
            let value = e.value;
            var first_level = @Html.Raw(Json.Encode(ViewBag.first_level));
            var second_level = @Html.Raw(Json.Encode(ViewBag.second_level));
            var third_level = @Html.Raw(Json.Encode(ViewBag.third_level));
            var fourth_level = @Html.Raw(Json.Encode(ViewBag.fourth_level));
            var html = undefined;
            debugger;
            if (value == 1) {
                html = "";
            }
            else if (value == 2) {
                if (first_level.length > 0) {
                    Object.entries(first_level).forEach(([index, object]) => {
                        html += '<option value = "' + object.id + '">' + object.title + '</option>';
                    });
                }
            }
            else if (value == 3) {
                if (second_level.length > 0) {
                    Object.entries(second_level).forEach(([index, object]) => {
                        html += '<option value = "' + object.id + '">' + object.title + '</option>';
                    });
                }
            }
            else if (value == 4) {
                if (third_level.length > 0) {
                    Object.entries(third_level).forEach(([index, object]) => {
                        html += '<option value = "' + object.id + '">' + object.title + '</option>';
                    });
                }
            }
            document.getElementById("gm_acc_parent_id").innerHTML = html;
        };

        const check = obj => {
            var elem = document.querySelector('#' + obj.id + ':checked');
            obj.value = elem !== null ? 1 : 0;
        }

        const navigate = id => {
            window.open('@Url.Action("InvByAccountId", "Accounting")?accountId='+id,"_blank");
        }
        $(document).ready(function () {
            // Add minus icon for collapse element which is open by default
            var elements = document.querySelectorAll('.tab-pane');
            elements.forEach((element, index) => {
                var attribute = element.getAttribute('data-id');
                var elementsToShift = document.querySelectorAll('#shiftingDiv');
                elementsToShift.forEach((sElement, sIndex) => {
                    var sAttribute = sElement.getAttribute('data-shifterId');
                    if (sAttribute == attribute) {
                        element.innerHTML += sElement.innerHTML;
                    }
                });
            });

            $(".collapse.show").each(function () {
                $(this).prev(".card-header").find(".fa").addClass("fa-minus").removeClass("fa-plus");
            });

            // Toggle plus minus icon on show hide of collapse element
            $(".collapse").on('show.bs.collapse', function () {
                $(this).prev(".card-header").find(".fa").removeClass("fa-plus").addClass("fa-minus");
            }).on('hide.bs.collapse', function () {
                $(this).prev(".card-header").find(".fa").removeClass("fa-minus").addClass("fa-plus");
            });

            $("#example").DataTable({
                //dom: 'Bfrtip',
                //buttons: [
                //    'copyHtml5',
                //    'excelHtml5',
                //    'csvHtml5',
                //    'pdfHtml5'
                //]
            });
            Space();
        });

        const SetDefaultValues = () => {
            $('#gm_acc_id').val(@ViewBag.documentNo + 1);
            $("input[type='number']").val(0.00);
            $("input[type='text']").val("");
            $("input[type='date']").val('@DateTime.Now.Date'.split('_')[0]);
            $("textarea").val('');
            $("textarea").text('');
        }

        function Message(title, text, type) {
            Swal.fire({
                title: title + '!',
                text: text,
                icon: type,
                confirmButtonText: 'OK'
            })
        }

        function GetOrders() {
            $('#example').DataTable();
        }
    </script>
}