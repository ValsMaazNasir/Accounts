@model LiquadCargoManagment.Models.ViewModel
@{
    ViewBag.Title = "Roles";
}


<div class="content-header">

    <div class="header-section">
        <h1>
            Roles <br><small>Create Read Update Delete Roles</small>
        </h1>
    </div>

</div>
<ul class="breadcrumb breadcrumb-top">
    <li>Admin</li>
    <li><a href="javascript:;">Roles</a></li>
</ul>

<!-- END Datatables Header -->
<!-- Datatables Content -->
<div class="block full">
    <div class="row">
        <div class="col-md-6">
            <input type="hidden" name="RoleID" id="hfEditID" />
            <label class="control-label">Role Name</label>
            <input type="text" name="RoleName" class="form-control" required />
        </div>
    </div>
    <div style="height:400px;overflow:scroll">
        <table class="table table-responsive" id="grid">
            <thead>
                <tr>
                    <td>Forms</td>
                    <td>Roles</td>
                </tr>
            </thead>
            <tbody>
                @{int i = 0; }
                @foreach (var item in Model.lstForms)
                {


                    <tr>
                        <td>
                            <input type="hidden" value="@item.FormID" />
                            @item.FormName
                        </td>
                        <td>
                            <div class="radio">
                                <label for="example-radio1">
                                    <input type="radio" name="rd_@i" value="None" checked> None
                                </label>
                            </div>
                            <div class="radio">
                                <label for="example-radio1">
                                    <input type="radio" name="rd_@i" value="CRUD"> All
                                </label>
                            </div>
                            <div class="checkbox">
                                <label for="example-checkbox1">
                                    <input type="checkbox" value="C"> Create
                                </label>
                            </div>
                            <div class="checkbox">
                                <label for="example-checkbox2">
                                    <input type="checkbox" value="R">Read
                                </label>
                            </div>
                            <div class="checkbox">
                                <label for="example-checkbox3">
                                    <input type="checkbox" value="U"> Update
                                </label>
                            </div>
                            <div class="checkbox">
                                <label for="example-checkbox3">
                                    <input type="checkbox" value="D"> Delete
                                </label>
                            </div>
                        </td>
                    </tr>
                    i++;
                }

            </tbody>
        </table>
    </div>
    <div class="row">
        <div class="col-md-6 pull-right">
            <button type="submit" id="btnSaveEdit" class="btn btn-primary pull-right"><b><i class="fa fa-save"></i> Save</b></button>

        </div>
    </div>

</div>

@section Script
{
    <script>
        $(document).ready(function () {
            $("#example").DataTable({
                dom: 'Bfrtip',
                buttons: [
                    'copyHtml5',
                    'excelHtml5',
                    'csvHtml5',
                    'pdfHtml5'
                ]
            });

            $("#btnSaveEdit").click(function () {
                let RoleName = $("input[name='RoleName']").val();
                if (RoleName.trim() != "") {
                    let table = $("#grid tbody");
                    let arr = [];
                    for (var i = 0; i < table.find("tr").length; i++) {
                        let Permissions = "";
                        let x = table.find(`tr:eq(${i}) td:eq(1) input[type='radio']:checked`).val();
                        let y = "";
                        if (x == undefined || x == "") {
                            table.find(`tr:eq(${i}) td:eq(1) input[type='checkbox']:checked`).each(function () {
                                y += $(this).val();
                            });
                            Permissions = y;
                        }
                        else {
                            Permissions = x;
                        }
                        arr.push({ "FormID": table.find(`tr:eq(${i}) td:eq(0) input`).val(), "Parameter": Permissions });
                    }

                    $.ajax({
                        url: "../Roles/Index",
                        type: "POST",
                        data: { lstRole: arr, RoleName: RoleName },
                        success: function (response) {
                            if (response.Status != "OK") {
                                Message("Error", response.Message, "error");
                            }
                            else {
                                Message("Created", response.Message, "success");
                                setTimeout(function () { window.location.reload() },2000);
                            }
                        },
                        error: function () {
                            Message("Error", "Request failed", "error");
                        }
                    })
                }
                else {
                    Message("Required", "Role name is required", "error");
                }
            });

            $("input[type='checkbox']").click(function () {
                let len = $(this).parent("label").parent("div").parent("td").find("input[type='checkbox']:checked").length;
                if ($(this).is(":checked")) {
                    $(this).parent("label").parent("div").parent("td").find(".radio").hide();
                    $(this).parent("label").parent("div").parent("td").find(".radio").find("input").val("");
                }
                else {
                    if (!(len > 0)) {
                        $(this).parent("label").parent("div").parent("td").find(".radio").show();
                        $(this).parent("label").parent("div").parent("td").find(".radio").find("input").val("All");
                    }
                }

            });
        });

        function fnSuccess(response) {
            if (response.Status != "OK") {
                Message("Required", response.Message, "error");
            }
            else {
                $('#modal-add').modal('hide');
                Message("Success", "Record Saved Success", "success");
                $("#grid").html(response.html);
                ClearItem();
                GetOrders();
            }
        }
        function fnFailed(error) {
            window.location.reload();
        }

        function Message(title, text, type) {
            Swal.fire({
                title: title + '!',
                text: text,
                icon: type,
                confirmButtonText: 'OK'
            })
        }
        function GetOrders() {
            $('#example').DataTable();
        }

        function ClearItem() {
            $("input[type='text']").val('');
            $("input[type='hidden']").val('');
        }
        function viewRecord(object, e) {
            console.log(object);
            $("#modal-add").modal('show');
            $("#Code").val(object.Code);
            $("#Name").val(object.Name);
            $("#CityID").val(object.CityID);
            $("#Description").val(object.Description);
            let OrderID = object.ID;
            $("#hfEditID").val(OrderID);

        }

        function DeleteModel(Id) {
            debugger;
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: `../Admin/DeleteRoles`,
                        type: 'POST',
                        data: { ID: Id },
                        success: function (res) {
                            if (res.Status != "OK") {
                                Message("Error", res.Message, "error");
                            }
                            else {
                                $("#grid").html(res.html);
                                GetOrders();
                                Message("Success", "Record Deleted Success", "success");
                            }
                        },
                        error: function () {
                            alert('error');
                        }
                    });

                }
            })

        }

    </script>
}